{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/game/CarManager.ts"],"names":["_decorator","Component","Node","loader","Prefab","Vec3","Constants","CustomEventListener","PoolManager","RoadPoint","Car","ccclass","property","CarManager","type","start","on","EventName","GAME_OVER","_gameOver","reset","points","length","console","warn","_recycleAICar","_curPath","_createMainCar","_startSchedule","controMoving","isRunning","mainCar","startRunning","stopRunning","setEntry","setCamera","camera","cameraPos","cameraRotation","_stopSchedule","stopImmediately","setParent","node","parent","i","_aiCars","car","roadPoint","getComponent","startSchedule","_createEnemy","bind","stopSchedule","road","carID","self","loadRes","err","prefab","getNode","carComp","push","maxSpeed","speed","moveAfterFinished","_recycleAICae","index","indexOf","setNode","splice","_recycleAllAICar"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, loader, Prefab, Vec3 } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nimport { PoolManager } from '../data/PoolManager';\nimport { RoadPoint } from '../RoadPoint';\nimport { Car } from \"./Car\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('CarManager')\nexport class CarManager extends Component {\n\n  @property({\n    type: Car\n  })\n  mainCar: Car | null = null;\n\n  @property({\n    type: Node\n  })\n  camera: Node = null!;\n\n  @property\n  cameraPos = new Vec3(0, 2, 2);\n\n  @property\n  cameraRotation = -40;\n\n  private _curPath: Node[] = [];\n  private _aiCars: Car[] = [];\n\n  public start() {\n    CustomEventListener.on(Constants.EventName.GAME_OVER, this._gameOver, this);\n  }\n\n  public reset(points: Node[]) {\n    if (points.length <= 0) {\n      console.warn(\"there is no points in this map\");\n      return;\n    }\n\n    this._recycleAICar();\n    this._curPath = points;\n    this._createMainCar(points[0]);\n    this._startSchedule();\n  }\n\n  public controMoving(isRunning = true) {\n    if (isRunning) {\n      this.mainCar?.startRunning();\n    } else {\n      this.mainCar?.stopRunning();\n    }\n  }\n\n  private _createMainCar(points: Node) {\n    this.mainCar!.setEntry(points, true);\n    this.mainCar?.setCamera(this.camera, this.cameraPos, this.cameraRotation);\n  }\n\n  private _gameOver() {\n    this._stopSchedule();\n    this.mainCar?.stopImmediately();\n    this.camera.setParent(this.node.parent, true);\n    for (let i = 0; i < this._aiCars.length; i++) {\n      const car = this._aiCars[i];\n      car.stopImmediately();\n    }\n  }\n\n  private _startSchedule() {\n    for (let i = 1; i < this._curPath.length; i++) {\n      const node = this._curPath[i]\n      const roadPoint = node.getComponent(RoadPoint);\n      roadPoint?.startSchedule(this._createEnemy.bind(this));\n    }\n  }\n\n  private _stopSchedule() {\n    for (let i = 1; i < this._curPath.length; i++) {\n      const node = this._curPath[i]\n      const roadPoint = node.getComponent(RoadPoint);\n      roadPoint?.stopSchedule();\n    }\n  }\n\n  private _createEnemy(road: RoadPoint, carID: string) {\n    const self = this;\n    loader.loadRes(`car/car${carID}`, Prefab, (err, prefab) => {\n      if (err) {\n        console.warn(err);\n        return;\n      }\n\n      const car = PoolManager.getNode(prefab, self.node);\n      const carComp = car.getComponent(Car) as Car;\n      this._aiCars.push(carComp);\n      carComp.setEntry(road.node)\n      carComp.maxSpeed = road.speed;\n      carComp.startRunning();\n      carComp.moveAfterFinished(this._recycleAICae.bind(this))\n    })\n  }\n\n  private _recycleAICae(car: Car) {\n    const index = this._aiCars.indexOf(car);\n    if (index >= 0) {\n      PoolManager.setNode(car.node);\n      this._aiCars.splice(index, 1);\n    }\n  }\n\n  private _recycleAllAICar() {\n    for (let i = 0; i < this._aiCars.length; i++) {\n      const car = this._aiCars[i];\n      PoolManager.setNode(car.node);\n    }\n\n    this._aiCars.length = 0;\n  }\n}"]}