{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/game/CarManager.ts"],"names":["_decorator","Component","loader","Prefab","PoolManager","RoadPoint","Car","ccclass","property","CarManager","type","reset","points","length","console","warn","_curPath","_createMainCar","_startSchedule","controMoving","isRunning","mainCar","startRunning","stopRunning","setEntry","i","node","roadPoint","getComponent","startSchedule","_createEnemy","bind","_stopSchedule","road","carID","self","loadRes","err","prefab","car","getNode","carComp","_aiCars","push","maxSpeed","speed","moveAfterFinished","_recycleAICae","index","indexOf","setNode","splice"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, loader, Prefab } from 'cc';\nimport { PoolManager } from '../data/PoolManager';\nimport { RoadPoint } from '../RoadPoint';\nimport { Car } from \"./Car\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('CarManager')\nexport class CarManager extends Component {\n\n  @property({\n    type: Car\n  })\n  mainCar: Car | null = null;\n\n  private _curPath: Node[] = [];\n  private _aiCars: Car[] = [];\n\n  public reset(points: Node[]) {\n    if (points.length <= 0) {\n      console.warn(\"there is no points in this map\");\n      return;\n    }\n\n    this._curPath = points;\n    this._createMainCar(points[0]);\n    this._startSchedule();\n  }\n\n  public controMoving(isRunning = true) {\n    if (isRunning) {\n      this.mainCar?.startRunning();\n    } else {\n      this.mainCar?.stopRunning();\n    }\n  }\n\n  private _createMainCar(points: Node) {\n    this.mainCar!.setEntry(points, true);\n  }\n\n  private _startSchedule() {\n    for (let i = 1; i < this._curPath.length; i++) {\n      const node = this._curPath[i]\n      const roadPoint = node.getComponent(RoadPoint);\n      roadPoint?.startSchedule(this._createEnemy.bind(this));\n    }\n  }\n\n  private _stopSchedule() {\n\n  }\n\n  private _createEnemy(road: RoadPoint, carID: string) {\n    const self = this;\n    loader.loadRes(`car/car${carID}`, Prefab, (err, prefab) => {\n      if (err) {\n        console.warn(err);\n        return;\n      }\n\n      const car = PoolManager.getNode(prefab, self.node);\n      const carComp = car.getComponent(Car) as Car;\n      this._aiCars.push(carComp);\n      carComp.setEntry(road.node)\n      carComp.maxSpeed = road.speed;\n      carComp.startRunning();\n      carComp.moveAfterFinished(this._recycleAICae.bind(this))\n    })\n  }\n\n  private _recycleAICae(car: Car) {\n    const index = this._aiCars.indexOf(car);\n    if (index < 0) {\n      return;\n    }\n\n    PoolManager.setNode(car.node);\n    this._aiCars.splice(index, 1);\n  }\n}"]}