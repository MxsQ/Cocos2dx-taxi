{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/taxi/assets/script/game/Car.ts"],"names":["_decorator","Component","Vec3","RoadPoint","ccclass","property","_tempVec","Car","update","dt","_isMoving","_offset","set","node","worldPosition","_currentRoadPoint","moveType","RoadMoveType","BEND","z","_pointB","_pointA","_curSpeed","x","setWorldPosition","subtract","length","_arrivalStation","startRunning","stopRunning","setEntry","entry","getComponent","console","warn","name","nextStation","eulerAngles","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,S,cAAAA,S;;;;;;;AACDC,MAAAA,O,GAAsBJ,U,CAAtBI,O;AAASC,MAAAA,Q,GAAaL,U,CAAbK,Q;AAGXC,MAAAA,Q,GAAW,IAAIJ,IAAJ,E;;qBAGJK,G,WADZH,OAAO,CAAC,KAAD,C;;;;;;;;;;;;8EAGuC,I;;oEAC3B,IAAIF,IAAJ,E;;oEACA,IAAIA,IAAJ,E;;sEACE,G;;sEACA,K;;oEACF,IAAIA,IAAJ,E;;;;;;;eAEXM,M,GAAP,gBAAcC,EAAd,EAAyB;AAAA;;AACvB,cAAG,KAAKC,SAAR,EAAkB;AAChB,iBAAKC,OAAL,CAAaC,GAAb,CAAiB,KAAKC,IAAL,CAAUC,aAA3B;;AAEA,6CAAQ,KAAKC,iBAAb,0DAAQ,sBAAwBC,QAAhC;AACE,mBAAK;AAAA;AAAA,0CAAUC,YAAV,CAAuBC,IAA5B;AACE;;AAEA;AACE,oBAAMC,CAAC,GAAG,KAAKC,OAAL,CAAaD,CAAb,GAAiB,KAAKE,OAAL,CAAaF,CAAxC;;AACA,oBAAGA,CAAC,KAAK,CAAT,EAAW;AACT,sBAAGA,CAAC,GAAG,CAAP,EAAS;AACP,yBAAKR,OAAL,CAAaQ,CAAb,IAAkB,KAAKG,SAAvB;;AACA,wBAAG,KAAKX,OAAL,CAAaQ,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAAjC,EAAmC;AACjC,2BAAKR,OAAL,CAAaQ,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAA9B;AACD;AACF,mBALD,MAKM;AACJ,yBAAKR,OAAL,CAAaQ,CAAb,IAAkB,KAAKG,SAAvB;;AACA,wBAAG,KAAKX,OAAL,CAAaQ,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAAjC,EAAmC;AACjC,2BAAKR,OAAL,CAAaQ,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAA9B;AACD;AACF;AACF,iBAZD,MAYM;AACJ,sBAAMI,CAAC,GAAG,KAAKH,OAAL,CAAaG,CAAb,GAAiB,KAAKF,OAAL,CAAaE,CAAxC;;AACA,sBAAGA,CAAC,GAAG,CAAP,EAAS;AACP,yBAAKZ,OAAL,CAAaY,CAAb,IAAkB,KAAKD,SAAvB;;AACA,wBAAG,KAAKX,OAAL,CAAaY,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAAjC,EAAmC;AACjC,2BAAKZ,OAAL,CAAaY,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B;AACD;AACF,mBALD,MAKM;AACJ,yBAAKZ,OAAL,CAAaY,CAAb,IAAkB,KAAKD,SAAvB;;AACA,wBAAG,KAAKX,OAAL,CAAaY,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAAjC,EAAmC;AACjC,2BAAKZ,OAAL,CAAaY,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B;AACD;AACF;AACF;;AAED;AAjCN;;AAmCA,iBAAKV,IAAL,CAAUW,gBAAV,CAA2B,KAAKb,OAAhC;AACAT,YAAAA,IAAI,CAACuB,QAAL,CAAcnB,QAAd,EAAwB,KAAKc,OAA7B,EAAsC,KAAKT,OAA3C;;AACA,gBAAGL,QAAQ,CAACoB,MAAT,MAAqB;AAAK;AAA7B,cAA2C;AACxC,qBAAKC,eAAL;AACF;AACF;AACF,S;;eAEMC,Y,GAAP,wBAAqB;AACnB,cAAG,KAAKb,iBAAR,EAA0B;AACxB,iBAAKL,SAAL,GAAiB,IAAjB;AACD;AACF,S;;eAEMmB,W,GAAP,uBAAoB;AAClB,eAAKnB,SAAL,GAAiB,KAAjB;AACD,S;;eAEMoB,Q,GAAP,kBAAgBC,KAAhB,EAA4B;AAC1B,eAAKlB,IAAL,CAAUW,gBAAV,CAA2BO,KAAK,CAACjB,aAAjC;AACA,eAAKC,iBAAL,GAAyBgB,KAAK,CAACC,YAAN;AAAA;AAAA,qCAAzB;;AACA,cAAG,CAAC,KAAKjB,iBAAT,EAA2B;AACzBkB,YAAAA,OAAO,CAACC,IAAR,CAAa,8BAA8BH,KAAK,CAACI,IAAjD;AACA;AACD;;AAED,eAAKd,OAAL,CAAaT,GAAb,CAAiBmB,KAAK,CAACjB,aAAvB;;AACA,eAAKM,OAAL,CAAaR,GAAb,CAAiB,KAAKG,iBAAL,CAAuBqB,WAAvB,CAAmCtB,aAApD,EAT0B,CAW1B;;;AACA,cAAMK,CAAC,GAAG,KAAKC,OAAL,CAAaD,CAAb,GAAiB,KAAKE,OAAL,CAAaF,CAAxC;;AACA,cAAGA,CAAC,KAAK,CAAT,EAAW;AACT,iBAAKN,IAAL,CAAUwB,WAAV,GAAwBlB,CAAC,GAAG,CAAJ,GAAQ,IAAIjB,IAAJ,EAAR,GAAqB,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAA7C;AACD,WAFD,MAEM;AACJ,gBAAMqB,CAAC,GAAG,KAAKH,OAAL,CAAaG,CAAb,GAAiB,KAAKF,OAAL,CAAaE,CAAxC;AACA,iBAAKV,IAAL,CAAUwB,WAAV,GAAwBd,CAAC,GAAG,CAAJ,GAAQ,IAAIrB,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,CAAhB,CAAR,GAA6B,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAArD;AACD;AACF,S;;eAEOyB,e,GAAR,2BAAyB;AAAA;;AACvBM,UAAAA,OAAO,CAACK,GAAR,CAAY,qBAAZ;;AACA,eAAKjB,OAAL,CAAaT,GAAb,CAAiB,KAAKQ,OAAtB;;AACA,eAAKL,iBAAL,GAAyB,KAAKA,iBAAL,CAAwBqB,WAAxB,CAAoCJ,YAApC;AAAA;AAAA,qCAAzB;;AACA,wCAAG,KAAKjB,iBAAR,2DAAG,uBAAwBqB,WAA3B,EAAuC;AACrC,iBAAKhB,OAAL,CAAaR,GAAb,CAAiB,KAAKG,iBAAL,CAAuBqB,WAAvB,CAAmCtB,aAApD;AACD,WAFD,MAEM;AACJ,iBAAKJ,SAAL,GAAiB,KAAjB;AACA,iBAAKK,iBAAL,GAAyB,IAAzB;AACD;AACF,S;;;QAjGsBd,S","sourcesContent":["\nimport { _decorator, Component, Node, Vec3 } from 'cc';\nimport { RoadPoint } from '../RoadPoint';\nconst { ccclass, property } = _decorator;\n\n\nconst _tempVec = new Vec3();\n\n@ccclass('Car')\nexport class Car extends Component {\n\n  public _currentRoadPoint: RoadPoint | null = null;\n  private _pointA = new Vec3();\n  private _pointB = new Vec3();\n  private _curSpeed = 0.1;\n  private _isMoving = false;\n  private _offset = new Vec3();\n\n  public update(dt: number){\n    if(this._isMoving){\n      this._offset.set(this.node.worldPosition);\n\n      switch (this._currentRoadPoint?.moveType){\n        case RoadPoint.RoadMoveType.BEND:\n          break;\n\n          default:\n            const z = this._pointB.z - this._pointA.z;\n            if(z !== 0){\n              if(z > 0){\n                this._offset.z += this._curSpeed;\n                if(this._offset.z > this._pointB.z){\n                  this._offset.z = this._pointB.z;\n                }\n              } else{\n                this._offset.z -= this._curSpeed;\n                if(this._offset.z < this._pointB.z){\n                  this._offset.z = this._pointB.z;\n                }\n              }\n            } else{\n              const x = this._pointB.x - this._pointA.x;\n              if(x > 0){\n                this._offset.x += this._curSpeed;\n                if(this._offset.x > this._pointB.x){\n                  this._offset.x = this._pointB.x;\n                }\n              } else{\n                this._offset.x -= this._curSpeed;\n                if(this._offset.x < this._pointB.x){\n                  this._offset.x = this._pointB.x;\n                }\n              }\n            }\n\n            break;\n      }\n      this.node.setWorldPosition(this._offset);\n      Vec3.subtract(_tempVec, this._pointB, this._offset);\n      if(_tempVec.length() <= 0.01 /** 这里是步长容错*/){\n         this._arrivalStation();\n      }\n    }\n  }\n\n  public startRunning(){\n    if(this._currentRoadPoint){\n      this._isMoving = true;\n    }\n  }\n\n  public stopRunning(){\n    this._isMoving = false;\n  }\n\n  public setEntry(entry: Node){\n    this.node.setWorldPosition(entry.worldPosition);\n    this._currentRoadPoint = entry.getComponent(RoadPoint);\n    if(!this._currentRoadPoint){\n      console.warn(\"there is no RoadPoint in \" + entry.name);\n      return;\n    }\n\n    this._pointA.set(entry.worldPosition);\n    this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n    // 调整车子的视角方向\n    const z = this._pointB.z - this._pointA.z;\n    if(z !== 0){\n      this.node.eulerAngles = z < 0 ? new Vec3() : new Vec3(0, 180, 0);\n    } else{\n      const x = this._pointB.x - this._pointA.x;\n      this.node.eulerAngles = x < 0 ? new Vec3(0, 90, 0) : new Vec3(0, 270, 0);\n    }\n  }\n\n  private _arrivalStation(){\n    console.log(\"doooooooo..........\")\n    this._pointA.set(this._pointB);\n    this._currentRoadPoint = this._currentRoadPoint!.nextStation.getComponent(RoadPoint);\n    if(this._currentRoadPoint?.nextStation){\n      this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n    } else{\n      this._isMoving = false;\n      this._currentRoadPoint = null;\n    }\n  }\n}\n\n"]}