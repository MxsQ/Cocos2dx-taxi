{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/taxi/assets/script/game/CustomerManager.ts"],"names":["_decorator","Component","Node","Vec3","AnimationComponent","Constants","CustomEventListener","ccclass","property","EventName","_tempVec","CustomerManager","type","CustomerState","NONE","start","on","GREETING","_greetingCustomer","GOODBYE","_takingCustomer","update","dt","_inTheOrder","_deltaTime","walkTime","_curCustomer","active","_state","dispatchEvent","FINISHID_WALK","lerp","_startPos","_endPos","setWorldPosition","args","customers","Math","floor","random","length","carPos","direction","multiplyScalar","add","x","eulerAngles","z","animComp","getComponent","play"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, AnimationComponent } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nconst { ccclass, property } = _decorator;\n\nconst EventName = Constants.EventName;\nconst _tempVec = new Vec3()\n\n@ccclass('CustomerManager')\nexport class CustomerManager extends Component {\n\n  @property({\n    type: [Node]\n  })\n  customers: Node[] = [];\n\n  @property\n  walkTime = 2;\n\n  private _curCustomer: Node | null = null;\n  private _startPos = new Vec3();\n  private _endPos = new Vec3();\n  private _inTheOrder = false;\n  private _deltaTime = 0;\n  private _state = Constants.CustomerState.NONE;\n\n  public start() {\n    CustomEventListener.on(EventName.GREETING, this._greetingCustomer, this);\n    CustomEventListener.on(EventName.GOODBYE, this._takingCustomer, this);\n  }\n\n  public update(dt: number) {\n    if (this._inTheOrder) {\n      this._deltaTime += dt;\n      if (this._deltaTime > this.walkTime) {\n        this._deltaTime = 0;\n        this._inTheOrder = false;\n        this._curCustomer!.active = false;\n        if (this._state == Constants.CustomerState.GOODBYE) {\n          this._curCustomer = null;\n        }\n        CustomEventListener.dispatchEvent(EventName.FINISHID_WALK);\n\n      } else {\n        Vec3.lerp(_tempVec, this._startPos, this._endPos, this._deltaTime / this.walkTime)\n        this._curCustomer?.setWorldPosition(_tempVec);\n      }\n    }\n  }\n\n  private _greetingCustomer(...args: any[]) {\n    this._curCustomer = this.customers[Math.floor(Math.random() * this.customers.length)];\n    this._state = Constants.CustomerState.GREETING;\n    this._inTheOrder = true;\n    if (!this.customers) {\n      return;\n    }\n\n    const carPos = args[0];\n    const direction = args[1];\n    Vec3.multiplyScalar(this._startPos, direction, 1.4);\n    this._startPos.add(carPos)\n    Vec3.multiplyScalar(this._endPos, direction, 0.5);\n    this._endPos.add(carPos)\n\n    this._curCustomer.setWorldPosition(this._startPos);\n    this._curCustomer.active = true\n\n    if (direction.x !== 0) {\n      // 设置朝向\n      if (direction.x > 0) {\n        this._curCustomer.eulerAngles = new Vec3(0, -90, 0);\n      } else {\n        this._curCustomer.eulerAngles = new Vec3(0, 90, 0);\n      }\n    } else {\n      if (direction.z > 0) {\n        this._curCustomer.eulerAngles = new Vec3(0, 180, 0);\n      } else {\n        this._curCustomer.eulerAngles = new Vec3();\n      }\n    }\n\n    const animComp = this._curCustomer.getComponent(AnimationComponent);\n    animComp.play('walk');\n\n  }\n\n  private _takingCustomer(...args: any[]) {\n    this._state = Constants.CustomerState.GOODBYE;\n    this._inTheOrder = true;\n\n    const carPos = args[0];\n    const direction = args[1];\n    Vec3.multiplyScalar(this._startPos, direction, 0.5);\n    this._startPos.add(carPos)\n    Vec3.multiplyScalar(this._endPos, direction, 1.4);\n    this._endPos.add(carPos)\n\n    this._curCustomer.setWorldPosition(this._startPos);\n    this._curCustomer.active = true\n\n    if (direction.x !== 0) {\n      // 设置朝向\n      if (direction.x > 0) {\n        this._curCustomer.eulerAngles = new Vec3(0, 90, 0);\n      } else {\n        this._curCustomer.eulerAngles = new Vec3(0, -90, 0);\n      }\n    } else {\n      if (direction.z > 0) {\n        this._curCustomer.eulerAngles = new Vec3();\n      } else {\n        this._curCustomer.eulerAngles = new Vec3(0, 180, 0);\n      }\n    }\n\n    const animComp = this._curCustomer.getComponent(AnimationComponent);\n    animComp.play('walk');\n  }\n}\n\n\n"]}