{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/game/CarManager.ts"],"names":["_decorator","Component","Node","loader","Prefab","Vec3","macro","Constants","CustomEventListener","PoolManager","RoadPoint","Car","ccclass","property","CarManager","type","start","on","EventName","GAME_OVER","_gameOver","GAME_START","_gameStart","reset","points","length","console","warn","_recycleAllAICar","_curPath","_createMainCar","controMoving","isRunning","dispatchEvent","SHOW_GUIDE","mainCar","startRunning","stopRunning","setEntry","setCamera","camera","cameraPos","cameraRotation","startWithMinSpeed","schedule","_checkCarIsClose","REPEAT_FOREVER","_startSchedule","_stopSchedule","setParent","node","parent","i","_aiCars","car","stopImmediately","unschedule","mainCarPos","worldPosition","aiCar","pos","Math","abs","x","z","tooting","roadPoint","getComponent","startSchedule","_createEnemy","bind","stopSchedule","road","carID","self","loadRes","err","prefab","getNode","carComp","push","maxSpeed","speed","moveAfterFinished","_recycleAICae","index","indexOf","setNode","splice"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, loader, Prefab, Vec3, macro } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nimport { RunTimeData } from '../data/GameData';\nimport { PoolManager } from '../data/PoolManager';\nimport { RoadPoint } from '../RoadPoint';\nimport { Car } from \"./Car\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('CarManager')\nexport class CarManager extends Component {\n\n  @property({\n    type: Car\n  })\n  mainCar: Car | null = null;\n\n  @property({\n    type: Node\n  })\n  camera: Node = null!;\n\n  @property\n  cameraPos = new Vec3(0, 2, 2);\n\n  @property\n  cameraRotation = -40;\n\n  private _curPath: Node[] = [];\n  private _aiCars: Car[] = [];\n\n  public start() {\n    CustomEventListener.on(Constants.EventName.GAME_OVER, this._gameOver, this);\n    CustomEventListener.on(Constants.EventName.GAME_START, this._gameStart, this);\n  }\n\n  public reset(points: Node[]) {\n    if (points.length <= 0) {\n      console.warn(\"there is no points in this map\");\n      return;\n    }\n\n    this._recycleAllAICar();\n    this._curPath = points;\n    this._createMainCar(points[0]);\n  }\n\n  public controMoving(isRunning = true) {\n    if (isRunning) {\n      CustomEventListener.dispatchEvent(Constants.EventName.SHOW_GUIDE, false);\n      this.mainCar?.startRunning();\n    } else {\n      this.mainCar?.stopRunning();\n    }\n  }\n\n  private _createMainCar(points: Node) {\n    this.mainCar!.setEntry(points, true);\n    this.mainCar?.setCamera(this.camera, this.cameraPos, this.cameraRotation);\n  }\n\n  private _gameStart() {\n    this.mainCar?.startWithMinSpeed();\n    this.schedule(this._checkCarIsClose, 0.2, macro.REPEAT_FOREVER);\n    this._startSchedule();\n  }\n\n  private _gameOver() {\n    this._stopSchedule();\n    this.camera.setParent(this.node.parent, true);\n    for (let i = 0; i < this._aiCars.length; i++) {\n      const car = this._aiCars[i];\n      car.stopImmediately();\n    }\n\n    this.unschedule(this._checkCarIsClose);\n  }\n\n  private _checkCarIsClose() {\n    const mainCarPos = this.mainCar?.node.worldPosition;\n    for (let i = 0; i < this._aiCars.length; i++) {\n      const aiCar = this._aiCars[i];\n      const pos = aiCar.node.worldPosition;\n      if (Math.abs(pos.x - mainCarPos!.x) <= 2 && Math.abs(pos.z - mainCarPos!.z) <= 2) {\n        this.mainCar?.tooting();\n        break;\n      }\n    }\n  }\n\n  private _startSchedule() {\n    for (let i = 1; i < this._curPath.length; i++) {\n      const node = this._curPath[i]\n      const roadPoint = node.getComponent(RoadPoint);\n      roadPoint?.startSchedule(this._createEnemy.bind(this));\n    }\n  }\n\n  private _stopSchedule() {\n    for (let i = 1; i < this._curPath.length; i++) {\n      const node = this._curPath[i]\n      const roadPoint = node.getComponent(RoadPoint);\n      roadPoint?.stopSchedule();\n    }\n  }\n\n  private _createEnemy(road: RoadPoint, carID: string) {\n    const self = this;\n    loader.loadRes(`car/car${carID}`, Prefab, (err, prefab) => {\n      if (err) {\n        console.warn(err);\n        return;\n      }\n\n      const car = PoolManager.getNode(prefab, self.node);\n      const carComp = car.getComponent(Car) as Car;\n      this._aiCars.push(carComp);\n      carComp.setEntry(road.node)\n      carComp.maxSpeed = road.speed;\n      carComp.startRunning();\n      carComp.moveAfterFinished(this._recycleAICae.bind(this))\n    })\n  }\n\n  private _recycleAICae(car: Car) {\n    const index = this._aiCars.indexOf(car);\n    if (index >= 0) {\n      PoolManager.setNode(car.node);\n      this._aiCars.splice(index, 1);\n    }\n  }\n\n  private _recycleAllAICar() {\n    for (let i = 0; i < this._aiCars.length; i++) {\n      const car = this._aiCars[i];\n      PoolManager.setNode(car.node);\n    }\n\n    this._aiCars.length = 0;\n  }\n}"]}