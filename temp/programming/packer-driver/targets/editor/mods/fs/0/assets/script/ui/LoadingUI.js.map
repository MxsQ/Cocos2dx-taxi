{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/ui/LoadingUI.ts"],"names":["_decorator","Component","UITransform","Constants","CustomEventListener","UpdateLabelValue","ccclass","property","LoadingUI","type","onEnable","on","EventName","UPDATE_PROGRESS","updateProgress","onDisable","off","show","node","active","transForm","getComponent","priority","_progress","progressLabel","playUpdateValue","value","tmp","finishLoading","scheduleOnce","_hide"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,W,OAAAA,W;;AACpCC,MAAAA,S,kBAAAA,S;;AACAC,MAAAA,mB,4BAAAA,mB;;AACAC,MAAAA,gB,yBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;2BAGjBQ,S,WADZF,OAAO,CAAC,WAAD,C,UAELC,QAAQ,CAAC;AACRE,QAAAA,IAAI;AAAA;AAAA;AADI,OAAD,C,oCAFX,MACaD,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA,6CAMnB,CANmB;AAAA;;AAQhCS,QAAAA,QAAQ,GAAG;AAChB;AAAA;AAAA,0DAAoBC,EAApB,CAAuB;AAAA;AAAA,sCAAUC,SAAV,CAAoBC,eAA3C,EAA4D,KAAKC,cAAjE,EAAiF,IAAjF;AACD;;AAEMC,QAAAA,SAAS,GAAG;AACjB;AAAA;AAAA,0DAAoBC,GAApB,CAAwB;AAAA;AAAA,sCAAUJ,SAAV,CAAoBC,eAA5C,EAA6D,KAAKC,cAAlE,EAAkF,IAAlF;AACD;;AAEMG,QAAAA,IAAI,GAAG;AACZ,eAAKC,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,gBAAMC,SAAS,GAAG,KAAKF,IAAL,CAAUG,YAAV,CAAuBnB,WAAvB,CAAlB;AACAkB,UAAAA,SAAS,CAACE,QAAV,GAAqB,GAArB;AAEA,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,aAAL,CAAmBC,eAAnB,CAAmC,KAAKF,SAAxC,EAAmD,KAAKA,SAAxD,EAAmE,CAAnE;AACD;;AAEMT,QAAAA,cAAc,CAACY,KAAD,EAAgB;AACnC,gBAAMC,GAAG,GAAG,KAAKJ,SAAL,GAAiBG,KAAjB,GAAyB,GAAzB,GAA+B,GAA/B,GAAqC,KAAKH,SAAL,GAAiBG,KAAlE;AACA,eAAKF,aAAL,CAAmBC,eAAnB,CAAmC,KAAKF,SAAxC,EAAmDI,GAAnD,EAAwD,GAAxD;AACA,eAAKJ,SAAL,IAAkBI,GAAlB;AACD;;AAEMC,QAAAA,aAAa,GAAG;AACrB,eAAKJ,aAAL,CAAmBC,eAAnB,CAAmC,KAAKF,SAAxC,EAAmD,GAAnD,EAAwD,GAAxD;AACA,eAAKA,SAAL,GAAiB,GAAjB;AACA,eAAKM,YAAL,CAAkB,KAAKC,KAAvB,EAA8B,GAA9B;AACD;;AAEOA,QAAAA,KAAK,GAAG;AACd,eAAKZ,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACD;;AAvCsC,O;;;;;iBAIL,I","sourcesContent":["\nimport { _decorator, Component, Node, Label, UITransform } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nimport { UpdateLabelValue } from '../data/UpdateLabelValue';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingUI')\nexport class LoadingUI extends Component {\n  @property({\n    type: UpdateLabelValue\n  })\n  progressLabel: UpdateLabelValue = null;\n\n  private _progress = 0;\n\n  public onEnable() {\n    CustomEventListener.on(Constants.EventName.UPDATE_PROGRESS, this.updateProgress, this);\n  }\n\n  public onDisable() {\n    CustomEventListener.off(Constants.EventName.UPDATE_PROGRESS, this.updateProgress, this);\n  }\n\n  public show() {\n    this.node.active = true;\n    const transForm = this.node.getComponent(UITransform) as UITransform;\n    transForm.priority = 100;\n\n    this._progress = 50;\n    this.progressLabel.playUpdateValue(this._progress, this._progress, 0);\n  }\n\n  public updateProgress(value: number) {\n    const tmp = this._progress + value > 100 ? 100 : this._progress + value;\n    this.progressLabel.playUpdateValue(this._progress, tmp, 0.2);\n    this._progress += tmp;\n  }\n\n  public finishLoading() {\n    this.progressLabel.playUpdateValue(this._progress, 100, 0.2);\n    this._progress = 100;\n    this.scheduleOnce(this._hide, 0.5);\n  }\n\n  private _hide() {\n    this.node.active = false;\n  }\n}\n"]}