{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/game/Car.ts"],"names":["_decorator","Component","Vec3","ParticleSystemComponent","BoxColliderComponent","RigidBodyComponent","Constants","CustomEventListener","RunTimeData","RoadPoint","AudioManager","ccclass","property","_tempVec","EventName","TOOTING_COOL_TIME","RunState","Car","NORMAL","start","on","FINISHID_WALK","_finishedWalk","_minSpeed","_maxSpeed","maxSpeed","update","dt","_tootingCoolTime","_isMoving","_curSpeed","_runState","INORDER","CRASH","_offset","set","node","worldPosition","_acceleration","_isBreaking","dispatchEvent","END_BRANING","_currentRoadPoint","moveType","RoadMoveType","BEND","offestRotation","_targetRotation","_originRotation","currentRotation","_conversion","eulerAngles","y","nextStation","_rotMeasure","Math","abs","target","rotateY","_pointA","_centerPoint","PI","z","_pointB","x","setWorldPosition","subtract","length","_arrivalStation","setCamera","camera","pos","rotation","_isMain","_camera","parent","setPosition","startRunning","minSpeed","stopRunning","STARTBRA_KING","playSound","AudioSource","STOP","moveAfterFinished","cd","_overCD","stopImmediately","startWithMinSpeed","tooting","audioSource","floor","random","TOOTONG1","TOOTING2","setEntry","entry","isMain","getComponent","console","warn","name","collider","gasNode","getChildByName","_gas","play","_onCollisionEnter","setGroup","CarGroup","MAIN_CAR","setMask","OTHER_CAR","_resetPhysical","log","type","RoadPointType","GREETING","_greetingCustomer","GOODBYE","_takingCustomer","END","WIN","OVER","GAME_OVER","clockwise","r","event","otherCollider","otherRigidBody","useGravity","applyForce","selfCollider","addMask","rigidBody","runtimeData","instance","isTakeOver","stop","direction","curProgress","SHOW_COIN","sleep","wakeUp","value","a"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, TERRAIN_HEIGHT_BASE, ParticleSystemComponent, BoxColliderComponent, RigidBody, ICollisionEvent, BoxCollider, RigidBodyComponent } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nimport { RunTimeData } from '../data/GameData';\nimport { RoadPoint } from '../RoadPoint';\nimport { AudioManager } from './AudioManager';\nimport { CustomerManager } from './CustomerManager';\nconst { ccclass, property } = _decorator;\n\nconst _tempVec = new Vec3();\nconst EventName = Constants.EventName;\nconst TOOTING_COOL_TIME = 5;\n\nenum RunState {\n  NORMAL = 0,\n  INORDER = 1,\n  CRASH = 2,\n  OVER = 3,\n}\n\n@ccclass('Car')\nexport class Car extends Component {\n  @property\n  maxSpeed = 0.2;\n  @property\n  minSpeed = 0.02;\n\n  public _currentRoadPoint: RoadPoint | null = null;\n  private _pointA = new Vec3();\n  private _pointB = new Vec3();\n  private _curSpeed = 0;\n  private _isMoving = false;\n  private _offset = new Vec3();\n  private _originRotation = 0;\n  private _targetRotation = 0;\n  private _centerPoint = new Vec3();\n  private _rotMeasure = 0;\n  private _acceleration = 0.2\n  private _isMain = false;\n\n  private _isBreaking = false;\n  private _gas: ParticleSystemComponent = null;\n  private _overCD: Function = null;\n  private _camera: Node = null;\n  private _tootingCoolTime = 0;\n  private _minSpeed = 0;\n  private _maxSpeed = 0;\n  private _runState = RunState.NORMAL;\n\n  public start() {\n    CustomEventListener.on(EventName.FINISHID_WALK, this._finishedWalk, this);\n    this._minSpeed = this._minSpeed;\n    this._maxSpeed = this.maxSpeed;\n  }\n\n  public update(dt: number) {\n    this._tootingCoolTime = this._tootingCoolTime > dt\n      ? this._tootingCoolTime - dt\n      : 0;\n\n    if ((!this._isMoving && this._curSpeed <= 0) || this._runState === RunState.INORDER || this._runState === RunState.CRASH) {\n      return;\n    }\n\n    this._offset.set(this.node.worldPosition);\n\n    this._curSpeed += this._acceleration * dt;\n    if (this._curSpeed > this._maxSpeed) {\n      this._curSpeed = this._maxSpeed;\n    }\n\n    if (this._curSpeed <= 0.001) {\n      this._curSpeed = this._minSpeed;\n      if (this._isBreaking) {\n        this._isBreaking = false;\n        CustomEventListener.dispatchEvent(EventName.END_BRANING);\n      }\n    }\n\n    switch (this._currentRoadPoint?.moveType) {\n      case RoadPoint.RoadMoveType.BEND:\n        const offestRotation = this._targetRotation - this._originRotation;\n        const currentRotation = this._conversion(this.node.eulerAngles.y);\n        let nextStation = (currentRotation - this._originRotation)\n          + (this._curSpeed * this._rotMeasure * (this._targetRotation > this._originRotation ? 1 : -1))\n        if (Math.abs(nextStation) > Math.abs(offestRotation)) {\n          nextStation = offestRotation;\n        }\n\n        const target = nextStation + this._originRotation;\n        _tempVec.set(0, target, 0);\n        this.node.eulerAngles = _tempVec;\n\n        // 这里需要知道，绕轴旋转的计算公式\n        // const sin = Math.sin(nextStation * Math.PI / 180);\n        // const cos = Math.cos(nextStation * Math.PI / 180);\n        // const xLength = this._pointA.x - this._centerPoint.x;\n        // const zLength = this._pointA.z - this._centerPoint.z;\n        // this._offset.set(xLength * cos + zLength * sin + this._centerPoint.x,\n        //     0,\n        //     -xLength * sin + zLength * cos + this._centerPoint.z)\n\n        Vec3.rotateY(this._offset, this._pointA, this._centerPoint, nextStation * Math.PI / 180);\n\n        break;\n\n      default:\n        const z = this._pointB.z - this._pointA.z;\n        if (z !== 0) {\n          if (z > 0) {\n            this._offset.z += this._curSpeed;\n            if (this._offset.z > this._pointB.z) {\n              this._offset.z = this._pointB.z;\n            }\n          } else {\n            this._offset.z -= this._curSpeed;\n            if (this._offset.z < this._pointB.z) {\n              this._offset.z = this._pointB.z;\n            }\n          }\n        } else {\n          const x = this._pointB.x - this._pointA.x;\n          if (x > 0) {\n            this._offset.x += this._curSpeed;\n            if (this._offset.x > this._pointB.x) {\n              this._offset.x = this._pointB.x;\n            }\n          } else {\n            this._offset.x -= this._curSpeed;\n            if (this._offset.x < this._pointB.x) {\n              this._offset.x = this._pointB.x;\n            }\n          }\n        }\n\n        break;\n    }\n    this.node.setWorldPosition(this._offset);\n    Vec3.subtract(_tempVec, this._pointB, this._offset);\n    // console.log(\"tem : \" + _tempVec.x + \" \" + _tempVec.y + \" \" + _tempVec.z);\n    // console.log(\"offest : \" + this._offset.x + \" \" + this._offset.y + \" \" + this._offset.z);\n    // console.log(_tempVec.length());\n    if (_tempVec.length() <= 0.01 /** 这里是步长容错*/) {\n      this._arrivalStation();\n    }\n\n  }\n\n  public setCamera(camera: Node, pos: Vec3, rotation: number) {\n    if (!this._isMain) {\n      return;\n    }\n    this._camera = camera;\n    this._camera.parent = this.node;\n    this._camera.setPosition(pos);\n    this._camera.eulerAngles = new Vec3(rotation, 0, 0);\n  }\n\n  public startRunning() {\n    if (this._runState !== RunState.NORMAL) {\n      return;\n    }\n\n    this._maxSpeed = this.maxSpeed;\n    this._minSpeed = this.minSpeed;\n    if (this._currentRoadPoint) {\n      this._isMoving = true;\n      this._acceleration = 0.2;\n\n    }\n\n    if (this._isBreaking) {\n      CustomEventListener.dispatchEvent(EventName.END_BRANING);\n      this._isBreaking = false;\n    }\n  }\n\n  public stopRunning() {\n    if (this._runState !== RunState.NORMAL) {\n      return;\n    }\n\n    this._acceleration = -0.3;\n    CustomEventListener.dispatchEvent(EventName.STARTBRA_KING, this.node);\n    this._isBreaking = true;\n    AudioManager.playSound(Constants.AudioSource.STOP);\n  }\n\n  public moveAfterFinished(cd: Function) {\n    this._overCD = cd;\n  }\n\n  public stopImmediately() {\n    this._isMoving = false;\n    this._curSpeed = 0;\n  }\n\n  public startWithMinSpeed() {\n    this._curSpeed = this.minSpeed;\n    this._maxSpeed = this._minSpeed;\n    this._isMoving = true;\n  }\n\n  public tooting() {\n    if (this._tootingCoolTime > 0) {\n      return;\n    }\n\n    this._tootingCoolTime = TOOTING_COOL_TIME;\n    const audioSource = Math.floor(Math.random() * 2) < 1\n      ? Constants.AudioSource.TOOTONG1\n      : Constants.AudioSource.TOOTING2;\n    AudioManager.playSound(audioSource);\n  }\n\n  public setEntry(entry: Node, isMain = false) {\n    this.node.setWorldPosition(entry.worldPosition);\n    this._currentRoadPoint = entry.getComponent(RoadPoint);\n    this._isMain = isMain;\n    if (!this._currentRoadPoint) {\n      console.warn(\"there is no RoadPoint in \" + entry.name);\n      return;\n    }\n\n    this._pointA.set(entry.worldPosition);\n    this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n    // 调整车子的视角方向\n    const z = this._pointB.z - this._pointA.z;\n    if (z !== 0) {\n      this.node.eulerAngles = z < 0 ? new Vec3() : new Vec3(0, 180, 0);\n    } else {\n      const x = this._pointB.x - this._pointA.x;\n      this.node.eulerAngles = x < 0 ? new Vec3(0, 90, 0) : new Vec3(0, 270, 0);\n    }\n\n    this._runState = RunState.NORMAL;\n    this._curSpeed = 0;\n    this._isMoving = false;\n\n    const collider = this.node.getComponent(BoxColliderComponent);\n    if (this._isMain) {\n      const gasNode = this.node.getChildByName('gas');\n      this._gas = gasNode?.getComponent(ParticleSystemComponent) as ParticleSystemComponent;\n      this._gas.play()\n\n      collider!.on('onCollisionEnter', this._onCollisionEnter, this);;\n      collider!.setGroup(Constants.CarGroup.MAIN_CAR);\n      collider!.setMask(Constants.CarGroup.OTHER_CAR);\n      // 碰撞的分组和掩码，到底是怎么工作的？？\n    } else {\n      collider!.setGroup(Constants.CarGroup.OTHER_CAR);\n      collider!.setMask(-1);\n    }\n\n    this._resetPhysical();\n  }\n\n  private _arrivalStation() {\n    console.log(\"到啦\")\n    if (this._isMain) {\n      console.log('i am main');\n    }\n    this._pointA.set(this._pointB);\n    this._currentRoadPoint = this._currentRoadPoint!.nextStation.getComponent(RoadPoint);\n    if (this._currentRoadPoint?.nextStation) {\n      this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n      if (this._isMain) {\n        if (this._isBreaking) {\n          this._isBreaking = false;\n          CustomEventListener.dispatchEvent(EventName.END_BRANING);\n        }\n\n        if (this._currentRoadPoint.type === RoadPoint.RoadPointType.GREETING) {\n          // 接客点  \n          this._greetingCustomer();\n        } else if (this._currentRoadPoint.type === RoadPoint.RoadPointType.GOODBYE) {\n          // 送客点\n          this._takingCustomer();\n        } else if (this._currentRoadPoint.type == RoadPoint.RoadPointType.END) {\n          AudioManager.playSound(Constants.AudioSource.WIN);\n          this._runState = RunState.OVER;\n          this._acceleration = 0;\n          this._minSpeed = this._maxSpeed = 0.2;\n          this._curSpeed = this._minSpeed;\n          CustomEventListener.dispatchEvent(EventName.GAME_OVER);\n        }\n      }\n\n\n      // 弯道处理\n      if (this._currentRoadPoint.moveType === RoadPoint.RoadMoveType.BEND) {\n        if (this._currentRoadPoint.clockwise) {\n          this._originRotation = this._conversion(this.node.eulerAngles.y);\n          this._targetRotation = this._originRotation - 90;\n          if ((this._pointB.z < this._pointA.z && this._pointB.x > this._pointA.x)\n            || (this._pointB.z > this._pointA.z && this._pointB.x < this._pointB.x)) {\n            this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n          } else {\n            this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n          }\n        } else {\n          this._originRotation = this._conversion(this.node.eulerAngles.y);\n          this._targetRotation = this._originRotation + 90;\n          if ((this._pointB.z > this._pointA.z && this._pointB.x > this._pointA.x)\n            || (this._pointB.z < this._pointA.z && this._pointB.x < this._pointB.x)) {\n            this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n          } else {\n            this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n          }\n        }\n\n        Vec3.subtract(_tempVec, this._pointA, this._centerPoint);\n        const r = _tempVec.length();\n        this._rotMeasure = 90 / (Math.PI * r / 2)\n      }\n    } else {\n      this._isMoving = false;\n      this._curSpeed = 0;\n      this._currentRoadPoint = null;\n\n      if (this._overCD) {\n        this._overCD(this);\n        this._overCD = null;\n      }\n    }\n  }\n\n  private _onCollisionEnter(event: ICollisionEvent) {\n    console.log('!!!!撞到了')\n    const otherCollider = event.otherCollider;\n    if (otherCollider.node.name === 'group') {\n      return;\n    }\n    const otherRigidBody = otherCollider.node.getComponent(RigidBodyComponent);\n    otherRigidBody!.useGravity = true;\n    otherRigidBody?.applyForce(new Vec3(0, 2500, -1500), new Vec3(0, 0.5, 0));\n\n    const collider = event.selfCollider;\n    collider.addMask(Constants.CarGroup.NORMAL);\n\n    const rigidBody = this.node.getComponent(RigidBodyComponent);\n    rigidBody!.useGravity = true;\n    this._runState = RunState.CRASH;\n    AudioManager.playSound(Constants.AudioSource.CRASH);\n    CustomEventListener.dispatchEvent(EventName.GAME_OVER);\n  }\n\n  private _greetingCustomer() {\n    const runtimeData = RunTimeData.instance();\n    runtimeData.isTakeOver = false;\n    this._runState = RunState.INORDER;\n    this._curSpeed = 0;\n    this._isMoving = false;\n    this._gas.stop();\n    CustomEventListener.dispatchEvent(EventName.GREETING, this.node.worldPosition, this._currentRoadPoint?.direction)\n  }\n\n  private _takingCustomer() {\n    const runtimeData = RunTimeData.instance();\n    runtimeData.isTakeOver = false;\n    runtimeData.curProgress++;\n    this._runState = RunState.INORDER;\n    this._curSpeed = 0;\n    this._isMoving = false;\n    this._gas.stop();\n    CustomEventListener.dispatchEvent(EventName.GOODBYE, this.node.worldPosition, this._currentRoadPoint?.direction)\n    CustomEventListener.dispatchEvent(EventName.SHOW_COIN, this.node.worldPosition);\n  }\n\n  private _finishedWalk() {\n    if (!this._isMain) {\n      return;\n    }\n    this._runState = RunState.NORMAL;\n    this._gas.play();\n  }\n\n  private _resetPhysical() {\n    const rigidBody = this.node.getComponent(RigidBodyComponent);\n    rigidBody!.useGravity = false;\n    rigidBody!.sleep();\n    rigidBody!.wakeUp();\n  }\n\n  private _conversion(value: number) {\n    let a = value;\n    if (a <= 0) {\n      a += 360;\n    }\n    return a;\n  }\n\n}\n\n"]}