{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/taxi/assets/script/game/Car.ts"],"names":["_decorator","Component","Vec3","RoadPoint","ccclass","property","_tempVec","Car","update","dt","_isMoving","_offset","set","node","worldPosition","_curSpeed","_acceleration","maxSpeed","_currentRoadPoint","moveType","RoadMoveType","BEND","offestRotation","_targetRotation","_originRotation","currentRotation","_conversion","eulerAngles","y","nextStation","_rotMeasure","Math","abs","target","rotateY","_pointA","_centerPoint","PI","z","_pointB","x","setWorldPosition","subtract","console","log","length","_arrivalStation","startRunning","stopRunning","setEntry","entry","getComponent","warn","name","clockwise","r","value","a"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,S,cAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAGxBM,MAAAA,Q,GAAW,IAAIJ,IAAJ,E;;qBAGJK,G,WADZH,OAAO,CAAC,KAAD,C,oCAAR,MACaG,GADb,SACyBN,SADzB,CACmC;AAAA;AAAA;;AAAA;;AAAA,qDAIY,IAJZ;;AAAA,2CAKf,IAAIC,IAAJ,EALe;;AAAA,2CAMf,IAAIA,IAAJ,EANe;;AAAA,6CAOb,CAPa;;AAAA,6CAQb,KARa;;AAAA,2CASf,IAAIA,IAAJ,EATe;;AAAA,mDAUP,CAVO;;AAAA,mDAWP,CAXO;;AAAA,gDAYV,IAAIA,IAAJ,EAZU;;AAAA,+CAaX,CAbW;;AAAA,iDAcT,GAdS;AAAA;;AAgB1BM,QAAAA,MAAM,CAACC,EAAD,EAAY;AAAA;;AACvB,cAAG,KAAKC,SAAR,EAAkB;AAChB,iBAAKC,OAAL,CAAaC,GAAb,CAAiB,KAAKC,IAAL,CAAUC,aAA3B;;AAEA,iBAAKC,SAAL,IAAkB,KAAKC,aAAL,GAAqBP,EAAvC;;AACA,gBAAG,KAAKM,SAAL,GAAiB,KAAKE,QAAzB,EAAkC;AAChC,mBAAKF,SAAL,GAAiB,KAAKE,QAAtB;AACD;;AAED,gBAAG,KAAKF,SAAL,IAAkB,KAArB,EAA2B;AACzB,mBAAKL,SAAL,GAAiB,KAAjB;AACD;;AAED,6CAAQ,KAAKQ,iBAAb,0DAAQ,sBAAwBC,QAAhC;AACE,mBAAK;AAAA;AAAA,0CAAUC,YAAV,CAAuBC,IAA5B;AACE,sBAAMC,cAAc,GAAG,KAAKC,eAAL,GAAuB,KAAKC,eAAnD;;AACA,sBAAMC,eAAe,GAAG,KAAKC,WAAL,CAAiB,KAAKb,IAAL,CAAUc,WAAV,CAAsBC,CAAvC,CAAxB;;AACA,oBAAIC,WAAW,GAAIJ,eAAe,GAAG,KAAKD,eAAxB,GACb,KAAKT,SAAL,GAAiB,KAAKe,WAAtB,IAAqC,KAAKP,eAAL,GAAuB,KAAKC,eAA5B,GAA8C,CAA9C,GAAiD,CAAC,CAAvF,CADL;;AAEA,oBAAGO,IAAI,CAACC,GAAL,CAASH,WAAT,IAAwBE,IAAI,CAACC,GAAL,CAASV,cAAT,CAA3B,EAAoD;AAClDO,kBAAAA,WAAW,GAAGP,cAAd;AACD;;AAED,sBAAMW,MAAM,GAAGJ,WAAW,GAAG,KAAKL,eAAlC;;AACAlB,gBAAAA,QAAQ,CAACM,GAAT,CAAa,CAAb,EAAgBqB,MAAhB,EAAwB,CAAxB;;AACA,qBAAKpB,IAAL,CAAUc,WAAV,GAAwBrB,QAAxB,CAXF,CAaE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,gBAAAA,IAAI,CAACgC,OAAL,CAAa,KAAKvB,OAAlB,EAA2B,KAAKwB,OAAhC,EAAyC,KAAKC,YAA9C,EAA4DP,WAAW,GAAGE,IAAI,CAACM,EAAnB,GAAwB,GAApF;AAEA;;AAEA;AACE,sBAAMC,CAAC,GAAG,KAAKC,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAAxC;;AACA,oBAAGA,CAAC,KAAK,CAAT,EAAW;AACT,sBAAGA,CAAC,GAAG,CAAP,EAAS;AACP,yBAAK3B,OAAL,CAAa2B,CAAb,IAAkB,KAAKvB,SAAvB;;AACA,wBAAG,KAAKJ,OAAL,CAAa2B,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAAjC,EAAmC;AACjC,2BAAK3B,OAAL,CAAa2B,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAA9B;AACD;AACF,mBALD,MAKM;AACJ,yBAAK3B,OAAL,CAAa2B,CAAb,IAAkB,KAAKvB,SAAvB;;AACA,wBAAG,KAAKJ,OAAL,CAAa2B,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAAjC,EAAmC;AACjC,2BAAK3B,OAAL,CAAa2B,CAAb,GAAiB,KAAKC,OAAL,CAAaD,CAA9B;AACD;AACF;AACF,iBAZD,MAYM;AACJ,wBAAME,CAAC,GAAG,KAAKD,OAAL,CAAaC,CAAb,GAAiB,KAAKL,OAAL,CAAaK,CAAxC;;AACA,sBAAGA,CAAC,GAAG,CAAP,EAAS;AACP,yBAAK7B,OAAL,CAAa6B,CAAb,IAAkB,KAAKzB,SAAvB;;AACA,wBAAG,KAAKJ,OAAL,CAAa6B,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CAAjC,EAAmC;AACjC,2BAAK7B,OAAL,CAAa6B,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CAA9B;AACD;AACF,mBALD,MAKM;AACJ,yBAAK7B,OAAL,CAAa6B,CAAb,IAAkB,KAAKzB,SAAvB;;AACA,wBAAG,KAAKJ,OAAL,CAAa6B,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CAAjC,EAAmC;AACjC,2BAAK7B,OAAL,CAAa6B,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CAA9B;AACD;AACF;AACF;;AAED;AAxDN;;AA0DA,iBAAK3B,IAAL,CAAU4B,gBAAV,CAA2B,KAAK9B,OAAhC;AACAT,YAAAA,IAAI,CAACwC,QAAL,CAAcpC,QAAd,EAAwB,KAAKiC,OAA7B,EAAsC,KAAK5B,OAA3C;AACAgC,YAAAA,OAAO,CAACC,GAAR,CAAYtC,QAAQ,CAACuC,MAAT,EAAZ;;AACA,gBAAGvC,QAAQ,CAACuC,MAAT,MAAqB;AAAK;AAA7B,cAA2C;AACxC,qBAAKC,eAAL;AACF;AACF;AACF;;AAEMC,QAAAA,YAAY,GAAE;AACnB,cAAG,KAAK7B,iBAAR,EAA0B;AACxB,iBAAKR,SAAL,GAAiB,IAAjB;AACA,iBAAKK,SAAL,GAAiB,CAAjB;AACA,iBAAKC,aAAL,GAAqB,GAArB;AACD;AACF;;AAEMgC,QAAAA,WAAW,GAAE;AAClB,eAAKhC,aAAL,GAAqB,CAAC,GAAtB,CADkB,CAElB;AACD;;AAEMiC,QAAAA,QAAQ,CAACC,KAAD,EAAa;AAC1B,eAAKrC,IAAL,CAAU4B,gBAAV,CAA2BS,KAAK,CAACpC,aAAjC;AACA,eAAKI,iBAAL,GAAyBgC,KAAK,CAACC,YAAN;AAAA;AAAA,qCAAzB;;AACA,cAAG,CAAC,KAAKjC,iBAAT,EAA2B;AACzByB,YAAAA,OAAO,CAACS,IAAR,CAAa,8BAA8BF,KAAK,CAACG,IAAjD;AACA;AACD;;AAED,eAAKlB,OAAL,CAAavB,GAAb,CAAiBsC,KAAK,CAACpC,aAAvB;;AACA,eAAKyB,OAAL,CAAa3B,GAAb,CAAiB,KAAKM,iBAAL,CAAuBW,WAAvB,CAAmCf,aAApD,EAT0B,CAW1B;;;AACA,gBAAMwB,CAAC,GAAG,KAAKC,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAAxC;;AACA,cAAGA,CAAC,KAAK,CAAT,EAAW;AACT,iBAAKzB,IAAL,CAAUc,WAAV,GAAwBW,CAAC,GAAG,CAAJ,GAAQ,IAAIpC,IAAJ,EAAR,GAAqB,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAA7C;AACD,WAFD,MAEM;AACJ,kBAAMsC,CAAC,GAAG,KAAKD,OAAL,CAAaC,CAAb,GAAiB,KAAKL,OAAL,CAAaK,CAAxC;AACA,iBAAK3B,IAAL,CAAUc,WAAV,GAAwBa,CAAC,GAAG,CAAJ,GAAQ,IAAItC,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,CAAhB,CAAR,GAA6B,IAAIA,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAArD;AACD;AACF;;AAEO4C,QAAAA,eAAe,GAAE;AAAA;;AACvBH,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,eAAKT,OAAL,CAAavB,GAAb,CAAiB,KAAK2B,OAAtB;;AACA,eAAKrB,iBAAL,GAAyB,KAAKA,iBAAL,CAAwBW,WAAxB,CAAoCsB,YAApC;AAAA;AAAA,qCAAzB;;AACA,wCAAG,KAAKjC,iBAAR,2DAAG,uBAAwBW,WAA3B,EAAuC;AACrC,iBAAKU,OAAL,CAAa3B,GAAb,CAAiB,KAAKM,iBAAL,CAAuBW,WAAvB,CAAmCf,aAApD;;AAEA,gBAAG,KAAKI,iBAAL,CAAuBC,QAAvB,KAAoC;AAAA;AAAA,wCAAUC,YAAV,CAAuBC,IAA9D,EAAmE;AACjE,kBAAG,KAAKH,iBAAL,CAAuBoC,SAA1B,EAAoC;AAChC,qBAAK9B,eAAL,GAAuB,KAAKE,WAAL,CAAiB,KAAKb,IAAL,CAAUc,WAAV,CAAsBC,CAAvC,CAAvB;AACA,qBAAKL,eAAL,GAAuB,KAAKC,eAAL,GAAuB,EAA9C;;AACA,oBAAI,KAAKe,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B,IAAmC,KAAKC,OAAL,CAAaC,CAAb,GAAiB,KAAKL,OAAL,CAAaK,CAAlE,IACG,KAAKD,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B,IAAmC,KAAKC,OAAL,CAAaC,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CADvE,EAC0E;AACxE,uBAAKJ,YAAL,CAAkBxB,GAAlB,CAAsB,KAAK2B,OAAL,CAAaC,CAAnC,EAAsC,CAAtC,EAAyC,KAAKL,OAAL,CAAaG,CAAtD;AACD,iBAHD,MAGM;AACJ,uBAAKF,YAAL,CAAkBxB,GAAlB,CAAsB,KAAKuB,OAAL,CAAaK,CAAnC,EAAsC,CAAtC,EAAyC,KAAKD,OAAL,CAAaD,CAAtD;AACD;AACJ,eATD,MASM;AACF,qBAAKd,eAAL,GAAuB,KAAKE,WAAL,CAAiB,KAAKb,IAAL,CAAUc,WAAV,CAAsBC,CAAvC,CAAvB;AACA,qBAAKL,eAAL,GAAuB,KAAKC,eAAL,GAAuB,EAA9C;;AACA,oBAAI,KAAKe,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B,IAAmC,KAAKC,OAAL,CAAaC,CAAb,GAAiB,KAAKL,OAAL,CAAaK,CAAlE,IACG,KAAKD,OAAL,CAAaD,CAAb,GAAiB,KAAKH,OAAL,CAAaG,CAA9B,IAAmC,KAAKC,OAAL,CAAaC,CAAb,GAAiB,KAAKD,OAAL,CAAaC,CADvE,EAC0E;AACxE,uBAAKJ,YAAL,CAAkBxB,GAAlB,CAAsB,KAAK2B,OAAL,CAAaC,CAAnC,EAAsC,CAAtC,EAAyC,KAAKL,OAAL,CAAaG,CAAtD;AACD,iBAHD,MAGM;AACJ,uBAAKF,YAAL,CAAkBxB,GAAlB,CAAsB,KAAKuB,OAAL,CAAaK,CAAnC,EAAsC,CAAtC,EAAyC,KAAKD,OAAL,CAAaD,CAAtD;AACD;AACJ;;AAEDpC,cAAAA,IAAI,CAACwC,QAAL,CAAcpC,QAAd,EAAwB,KAAK6B,OAA7B,EAAsC,KAAKC,YAA3C;;AACA,oBAAMmB,CAAC,GAAGjD,QAAQ,CAACuC,MAAT,EAAV;;AACA,mBAAKf,WAAL,GAAmB,MAAMC,IAAI,CAACM,EAAL,GAAUkB,CAAV,GAAc,CAApB,CAAnB;AACD;AACF,WA5BD,MA4BM;AACJ,iBAAK7C,SAAL,GAAiB,KAAjB;AACA,iBAAKQ,iBAAL,GAAyB,IAAzB;AACD;AACF;;AAEOQ,QAAAA,WAAW,CAAC8B,KAAD,EAAe;AAChC,cAAIC,CAAC,GAAGD,KAAR;;AACA,cAAIC,CAAC,IAAG,CAAR,EAAU;AACRA,YAAAA,CAAC,IAAE,GAAH;AACD;;AACD,iBAAOA,CAAP;AACD;;AA9KgC,O,mFAChCpD,Q;;;;;iBACU,G","sourcesContent":["\nimport { _decorator, Component, Node, Vec3 } from 'cc';\nimport { RoadPoint } from '../RoadPoint';\nconst { ccclass, property } = _decorator;\n\n\nconst _tempVec = new Vec3();\n\n@ccclass('Car')\nexport class Car extends Component {\n  @property\n  maxSpeed = 0.2\n\n  public _currentRoadPoint: RoadPoint | null = null;\n  private _pointA = new Vec3();\n  private _pointB = new Vec3();\n  private _curSpeed = 0;\n  private _isMoving = false;\n  private _offset = new Vec3();\n  private _originRotation = 0;\n  private _targetRotation = 0;\n  private _centerPoint = new Vec3();\n  private _rotMeasure = 0;\n  private _acceleration = 0.2\n\n  public update(dt: number){\n    if(this._isMoving){\n      this._offset.set(this.node.worldPosition);\n\n      this._curSpeed += this._acceleration * dt;\n      if(this._curSpeed > this.maxSpeed){\n        this._curSpeed = this.maxSpeed;\n      }\n\n      if(this._curSpeed <= 0.001){\n        this._isMoving = false;\n      }\n\n      switch (this._currentRoadPoint?.moveType){\n        case RoadPoint.RoadMoveType.BEND:\n          const offestRotation = this._targetRotation - this._originRotation;\n          const currentRotation = this._conversion(this.node.eulerAngles.y);\n          let nextStation = (currentRotation - this._originRotation) \n            + (this._curSpeed * this._rotMeasure * (this._targetRotation > this._originRotation ? 1: -1))\n          if(Math.abs(nextStation) > Math.abs(offestRotation)){\n            nextStation = offestRotation;\n          }\n\n          const target = nextStation + this._originRotation;\n          _tempVec.set(0, target, 0);\n          this.node.eulerAngles = _tempVec;\n\n          // 这里需要知道，绕轴旋转的计算公式\n          // const sin = Math.sin(nextStation * Math.PI / 180);\n          // const cos = Math.cos(nextStation * Math.PI / 180);\n          // const xLength = this._pointA.x - this._centerPoint.x;\n          // const zLength = this._pointA.z - this._centerPoint.z;\n          // this._offset.set(xLength * cos + zLength * sin + this._centerPoint.x,\n          //     0,\n          //     -xLength * sin + zLength * cos + this._centerPoint.z)\n          \n          Vec3.rotateY(this._offset, this._pointA, this._centerPoint, nextStation * Math.PI / 180);\n\n          break;\n\n          default:\n            const z = this._pointB.z - this._pointA.z;\n            if(z !== 0){\n              if(z > 0){\n                this._offset.z += this._curSpeed;\n                if(this._offset.z > this._pointB.z){\n                  this._offset.z = this._pointB.z;\n                }\n              } else{\n                this._offset.z -= this._curSpeed;\n                if(this._offset.z < this._pointB.z){\n                  this._offset.z = this._pointB.z;\n                }\n              }\n            } else{\n              const x = this._pointB.x - this._pointA.x;\n              if(x > 0){\n                this._offset.x += this._curSpeed;\n                if(this._offset.x > this._pointB.x){\n                  this._offset.x = this._pointB.x;\n                }\n              } else{\n                this._offset.x -= this._curSpeed;\n                if(this._offset.x < this._pointB.x){\n                  this._offset.x = this._pointB.x;\n                }\n              }\n            }\n\n            break;\n      }\n      this.node.setWorldPosition(this._offset);\n      Vec3.subtract(_tempVec, this._pointB, this._offset);\n      console.log(_tempVec.length())\n      if(_tempVec.length() <= 0.01 /** 这里是步长容错*/){\n         this._arrivalStation();\n      }\n    }\n  }\n\n  public startRunning(){\n    if(this._currentRoadPoint){\n      this._isMoving = true;\n      this._curSpeed = 0;\n      this._acceleration = 0.2;\n    }\n  }\n\n  public stopRunning(){\n    this._acceleration = -0.3;\n    // this._isMoving = false;\n  }\n\n  public setEntry(entry: Node){\n    this.node.setWorldPosition(entry.worldPosition);\n    this._currentRoadPoint = entry.getComponent(RoadPoint);\n    if(!this._currentRoadPoint){\n      console.warn(\"there is no RoadPoint in \" + entry.name);\n      return;\n    }\n\n    this._pointA.set(entry.worldPosition);\n    this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n    // 调整车子的视角方向\n    const z = this._pointB.z - this._pointA.z;\n    if(z !== 0){\n      this.node.eulerAngles = z < 0 ? new Vec3() : new Vec3(0, 180, 0);\n    } else{\n      const x = this._pointB.x - this._pointA.x;\n      this.node.eulerAngles = x < 0 ? new Vec3(0, 90, 0) : new Vec3(0, 270, 0);\n    }\n  }\n\n  private _arrivalStation(){\n    console.log(\"到啦\")\n    this._pointA.set(this._pointB);\n    this._currentRoadPoint = this._currentRoadPoint!.nextStation.getComponent(RoadPoint);\n    if(this._currentRoadPoint?.nextStation){\n      this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n      if(this._currentRoadPoint.moveType === RoadPoint.RoadMoveType.BEND){\n        if(this._currentRoadPoint.clockwise){\n            this._originRotation = this._conversion(this.node.eulerAngles.y);\n            this._targetRotation = this._originRotation - 90;\n            if((this._pointB.z < this._pointA.z && this._pointB.x > this._pointA.x) \n              || (this._pointB.z > this._pointA.z && this._pointB.x < this._pointB.x)){\n              this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n            } else{\n              this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n            }\n        } else{\n            this._originRotation = this._conversion(this.node.eulerAngles.y);\n            this._targetRotation = this._originRotation + 90;\n            if((this._pointB.z > this._pointA.z && this._pointB.x > this._pointA.x) \n              || (this._pointB.z < this._pointA.z && this._pointB.x < this._pointB.x)){\n              this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n            } else{\n              this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n            }\n        }\n\n        Vec3.subtract(_tempVec, this._pointA, this._centerPoint);\n        const r = _tempVec.length();\n        this._rotMeasure = 90 / (Math.PI * r / 2)\n      }\n    } else{\n      this._isMoving = false;\n      this._currentRoadPoint = null;\n    }\n  }\n\n  private _conversion(value: number){\n    let a = value;\n    if( a<= 0){\n      a+=360;\n    }\n    return a;\n  }\n}\n\n"]}