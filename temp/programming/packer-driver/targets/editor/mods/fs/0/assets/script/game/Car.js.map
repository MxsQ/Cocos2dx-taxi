{"version":3,"sources":["file:///Users/qinx/coding/cocos2dx/Cocos2dx-taxi/assets/script/game/Car.ts"],"names":["_decorator","Component","Vec3","ParticleSystemComponent","Constants","CustomEventListener","RoadPoint","AudioManager","ccclass","property","_tempVec","EventName","Car","start","on","FINISHID_WALK","_finishedWalk","update","dt","_isMoving","_isInOrder","_offset","set","node","worldPosition","_curSpeed","_acceleration","maxSpeed","_isBreaking","dispatchEvent","END_BRANING","_currentRoadPoint","moveType","RoadMoveType","BEND","offestRotation","_targetRotation","_originRotation","currentRotation","_conversion","eulerAngles","y","nextStation","_rotMeasure","Math","abs","target","rotateY","_pointA","_centerPoint","PI","z","_pointB","x","setWorldPosition","subtract","console","log","length","_arrivalStation","startRunning","stopRunning","STARTBRA_KING","playSound","AudioSource","STOP","moveAfterFinished","cd","_overCD","setEntry","entry","isMain","getComponent","_isMain","warn","name","gasNode","getChildByName","_gas","play","type","RoadPointType","GREETING","_greetingCustomer","GOODBYE","_takingCustomer","END","WIN","clockwise","r","stop","direction","SHOW_COIN","value","a"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Vec3, TERRAIN_HEIGHT_BASE, ParticleSystemComponent } from 'cc';\nimport { Constants } from '../data/Constants';\nimport { CustomEventListener } from '../data/CustomEventListener';\nimport { RoadPoint } from '../RoadPoint';\nimport { AudioManager } from './AudioManager';\nconst { ccclass, property } = _decorator;\n\n\nconst _tempVec = new Vec3();\nconst EventName = Constants.EventName;\n\n@ccclass('Car')\nexport class Car extends Component {\n  @property\n  maxSpeed = 0.2\n\n  public _currentRoadPoint: RoadPoint | null = null;\n  private _pointA = new Vec3();\n  private _pointB = new Vec3();\n  private _curSpeed = 0;\n  private _isMoving = false;\n  private _offset = new Vec3();\n  private _originRotation = 0;\n  private _targetRotation = 0;\n  private _centerPoint = new Vec3();\n  private _rotMeasure = 0;\n  private _acceleration = 0.2\n  private _isMain = false;\n  private _isInOrder = false;\n  private _isBreaking = false;\n  private _gas: ParticleSystemComponent = null;\n  private _overCD: Function = null;\n\n  public start() {\n    CustomEventListener.on(EventName.FINISHID_WALK, this._finishedWalk, this);\n  }\n\n  public update(dt: number) {\n    if (!this._isMoving || this._isInOrder) {\n      return;\n    }\n\n    this._offset.set(this.node.worldPosition);\n\n    this._curSpeed += this._acceleration * dt;\n    if (this._curSpeed > this.maxSpeed) {\n      this._curSpeed = this.maxSpeed;\n    }\n\n    if (this._curSpeed <= 0.001) {\n      this._isMoving = false;\n      if (this._isBreaking) {\n        this._isBreaking = false;\n        CustomEventListener.dispatchEvent(EventName.END_BRANING);\n      }\n    }\n\n    switch (this._currentRoadPoint?.moveType) {\n      case RoadPoint.RoadMoveType.BEND:\n        const offestRotation = this._targetRotation - this._originRotation;\n        const currentRotation = this._conversion(this.node.eulerAngles.y);\n        let nextStation = (currentRotation - this._originRotation)\n          + (this._curSpeed * this._rotMeasure * (this._targetRotation > this._originRotation ? 1 : -1))\n        if (Math.abs(nextStation) > Math.abs(offestRotation)) {\n          nextStation = offestRotation;\n        }\n\n        const target = nextStation + this._originRotation;\n        _tempVec.set(0, target, 0);\n        this.node.eulerAngles = _tempVec;\n\n        // 这里需要知道，绕轴旋转的计算公式\n        // const sin = Math.sin(nextStation * Math.PI / 180);\n        // const cos = Math.cos(nextStation * Math.PI / 180);\n        // const xLength = this._pointA.x - this._centerPoint.x;\n        // const zLength = this._pointA.z - this._centerPoint.z;\n        // this._offset.set(xLength * cos + zLength * sin + this._centerPoint.x,\n        //     0,\n        //     -xLength * sin + zLength * cos + this._centerPoint.z)\n\n        Vec3.rotateY(this._offset, this._pointA, this._centerPoint, nextStation * Math.PI / 180);\n\n        break;\n\n      default:\n        const z = this._pointB.z - this._pointA.z;\n        if (z !== 0) {\n          if (z > 0) {\n            this._offset.z += this._curSpeed;\n            if (this._offset.z > this._pointB.z) {\n              this._offset.z = this._pointB.z;\n            }\n          } else {\n            this._offset.z -= this._curSpeed;\n            if (this._offset.z < this._pointB.z) {\n              this._offset.z = this._pointB.z;\n            }\n          }\n        } else {\n          const x = this._pointB.x - this._pointA.x;\n          if (x > 0) {\n            this._offset.x += this._curSpeed;\n            if (this._offset.x > this._pointB.x) {\n              this._offset.x = this._pointB.x;\n            }\n          } else {\n            this._offset.x -= this._curSpeed;\n            if (this._offset.x < this._pointB.x) {\n              this._offset.x = this._pointB.x;\n            }\n          }\n        }\n\n        break;\n    }\n    this.node.setWorldPosition(this._offset);\n    Vec3.subtract(_tempVec, this._pointB, this._offset);\n    console.log(_tempVec.length())\n    if (_tempVec.length() <= 0.01 /** 这里是步长容错*/) {\n      this._arrivalStation();\n    }\n\n  }\n\n  public startRunning() {\n    if (this._currentRoadPoint) {\n      this._isMoving = true;\n      this._curSpeed = 0;\n      this._acceleration = 0.2;\n    }\n  }\n\n  public stopRunning() {\n    this._acceleration = -0.3;\n    CustomEventListener.dispatchEvent(EventName.STARTBRA_KING, this.node);\n    this._isBreaking = true;\n    AudioManager.playSound(Constants.AudioSource.STOP);\n  }\n\n  public moveAfterFinished(cd: Function) {\n    this._overCD = cd;\n  }\n\n  public setEntry(entry: Node, isMain = false) {\n    this.node.setWorldPosition(entry.worldPosition);\n    this._currentRoadPoint = entry.getComponent(RoadPoint);\n    this._isMain = isMain;\n    if (!this._currentRoadPoint) {\n      console.warn(\"there is no RoadPoint in \" + entry.name);\n      return;\n    }\n\n    this._pointA.set(entry.worldPosition);\n    this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n    // 调整车子的视角方向\n    const z = this._pointB.z - this._pointA.z;\n    if (z !== 0) {\n      this.node.eulerAngles = z < 0 ? new Vec3() : new Vec3(0, 180, 0);\n    } else {\n      const x = this._pointB.x - this._pointA.x;\n      this.node.eulerAngles = x < 0 ? new Vec3(0, 90, 0) : new Vec3(0, 270, 0);\n    }\n\n    if (this._isMain) {\n      const gasNode = this.node.getChildByName('gas');\n      this._gas = gasNode?.getComponent(ParticleSystemComponent) as ParticleSystemComponent;\n      this._gas.play()\n    }\n  }\n\n  private _arrivalStation() {\n    console.log(\"到啦\")\n    this._pointA.set(this._pointB);\n    this._currentRoadPoint = this._currentRoadPoint!.nextStation.getComponent(RoadPoint);\n    if (this._currentRoadPoint?.nextStation) {\n      this._pointB.set(this._currentRoadPoint.nextStation.worldPosition);\n\n      if (this._isMain) {\n        if (this._isBreaking) {\n          this._isBreaking = false;\n          CustomEventListener.dispatchEvent(EventName.END_BRANING);\n        }\n\n        if (this._currentRoadPoint.type === RoadPoint.RoadPointType.GREETING) {\n          // 接客点  \n          this._greetingCustomer();\n        } else if (this._currentRoadPoint.type === RoadPoint.RoadPointType.GOODBYE) {\n          // 送客点\n          this._takingCustomer();\n        } else if (this._currentRoadPoint.type == RoadPoint.RoadPointType.END) {\n          AudioManager.playSound(Constants.AudioSource.WIN);\n        }\n      }\n\n\n      // 弯道处理\n      if (this._currentRoadPoint.moveType === RoadPoint.RoadMoveType.BEND) {\n        if (this._currentRoadPoint.clockwise) {\n          this._originRotation = this._conversion(this.node.eulerAngles.y);\n          this._targetRotation = this._originRotation - 90;\n          if ((this._pointB.z < this._pointA.z && this._pointB.x > this._pointA.x)\n            || (this._pointB.z > this._pointA.z && this._pointB.x < this._pointB.x)) {\n            this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n          } else {\n            this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n          }\n        } else {\n          this._originRotation = this._conversion(this.node.eulerAngles.y);\n          this._targetRotation = this._originRotation + 90;\n          if ((this._pointB.z > this._pointA.z && this._pointB.x > this._pointA.x)\n            || (this._pointB.z < this._pointA.z && this._pointB.x < this._pointB.x)) {\n            this._centerPoint.set(this._pointB.x, 0, this._pointA.z);\n          } else {\n            this._centerPoint.set(this._pointA.x, 0, this._pointB.z);\n          }\n        }\n\n        Vec3.subtract(_tempVec, this._pointA, this._centerPoint);\n        const r = _tempVec.length();\n        this._rotMeasure = 90 / (Math.PI * r / 2)\n      }\n    } else {\n      this._isMoving = false;\n      this._currentRoadPoint = null;\n\n      if (this._overCD) {\n        this._overCD(this);\n        this._overCD = null;\n      }\n    }\n  }\n\n  private _greetingCustomer() {\n    this._isInOrder = true;\n    this._curSpeed = 0;\n    this._gas.stop();\n    CustomEventListener.dispatchEvent(EventName.GREETING, this.node.worldPosition, this._currentRoadPoint?.direction)\n  }\n\n  private _takingCustomer() {\n    this._isInOrder = true;\n    this._curSpeed = 0;\n    this._gas.stop();\n    CustomEventListener.dispatchEvent(EventName.GOODBYE, this.node.worldPosition, this._currentRoadPoint?.direction)\n    CustomEventListener.dispatchEvent(EventName.SHOW_COIN, this.node.worldPosition);\n  }\n\n  private _finishedWalk() {\n    this._gas.play();\n    this._isInOrder = false;\n  }\n\n  private _conversion(value: number) {\n    let a = value;\n    if (a <= 0) {\n      a += 360;\n    }\n    return a;\n  }\n}\n\n"]}